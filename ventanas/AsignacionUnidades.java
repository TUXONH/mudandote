/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import clases.Encapsuladas;
import clases.conexion;
import de.javasoft.plaf.synthetica.SyntheticaOrangeMetallicLookAndFeel;
//import clases.Llenar;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author danielandrademaglioni
 */
public class AsignacionUnidades extends javax.swing.JFrame {

    /**
     * Creates new form AsignacionUnidades
     */
     DefaultComboBoxModel modeloCombo = new DefaultComboBoxModel();
      DefaultComboBoxModel modeloCombo2 = new DefaultComboBoxModel();
      conexion con;
      String cap = "0",km = "3000",servicio = "1",capacidadTotal = null;
      public String Ventas=Encapsuladas.getAuxVentas();
    public AsignacionUnidades() {
        initComponents();
         con = new conexion();
         this.setLocationRelativeTo(null);
        con.getConnection();
           if(Ventas=="true")
        {
          //  cotizacion.setVisible(false);
          //  cotizacion.setVisible(false);
         
          
        
        }
        VerCombo();
        VerCombo1();
        Ver();
        combo1.addActionListener(new ActionListener() {
          public void actionPerformed(ActionEvent arg) {
           Seleccion(combo1.getSelectedItem().toString());
             Ver(combo1.getSelectedItem().toString());
          }
         });  
         jComboBox2.addActionListener(new ActionListener() {
          public void actionPerformed(ActionEvent arg) {
           Seleccion(combo1.getSelectedItem().toString());
             SelecUnidad(jComboBox2.getSelectedItem().toString());
             
          }
         });  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        combo1 = new javax.swing.JComboBox<>();
        volumen = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        asignar = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        progreso = new javax.swing.JProgressBar();
        camiones = new javax.swing.JLabel();

        setTitle("Asignacion de unidades");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Clientes"));

        combo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo1ActionPerformed(evt);
            }
        });

        volumen.setEnabled(false);

        jTextField2.setEnabled(false);

        jTextField3.setEnabled(false);

        jLabel1.setText("Volumen");

        jLabel2.setText("Nombre Vendedor");

        jLabel3.setText("Nombre clientes");

        jLabel5.setText("Folio clientes");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(101, 101, 101)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(volumen)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(volumen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Unidades"));

        asignar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/acep.png"))); // NOI18N
        asignar.setText("Asignar");
        asignar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asignarActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Folio unidades");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(67, 67, 67)
                        .addComponent(camiones, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(asignar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(progreso, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(32, 32, 32)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(asignar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(camiones, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(progreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 809, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed

    }//GEN-LAST:event_jComboBox2ActionPerformed
public String pasar_filas(String sql)
    throws SQLException
  {
      String c = null;
    try
    {
      Class.forName("com.mysql.jdbc.Driver");
      Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mudandote", "root", "");
      Statement stm = con.createStatement();
      ResultSet rst = stm.executeQuery(sql);
      ResultSetMetaData rsMd = rst.getMetaData();
      
      int NumeroColumnas = rsMd.getColumnCount();
      
      while (rst.next())
      {
        Object[] fila = new Object[NumeroColumnas];
        for (int j = 0; j < NumeroColumnas; j++) {
          fila[j] = rst.getObject(j+1);
          System.out.println("Filas "+fila[j]);
          c=(String) fila[j];
        }
        
      }
    }
    catch (ClassNotFoundException|SQLException ce) {}
    return c;
  }
    private void asignarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asignarActionPerformed
       progreso.setValue(0);
        int idx=(int) jComboBox2.getSelectedItem();       
         try {
                    PreparedStatement   pstm = (PreparedStatement)
                    con.getConnection().prepareStatement("SELECT CapacidadActual,Kilometraje,EnServicio,Capacidad from catunidades  WHERE Clave="+idx);
                      ResultSet res = pstm.executeQuery();
                      int i=0;
                      while(res.next()){
                          cap = res.getString("CapacidadActual");
                          km = res.getString("Kilometraje");
                          servicio = res.getString("EnServicio");
                          capacidadTotal= res.getString("Capacidad");
                          System.out.println("capacidad actual :"+cap +" kilometros: "+km+" En servicio :"+servicio);
                      
                      }
                    
        } catch (SQLException ex) {
             System.out.println(ex);
        } 
       clases.conexion con = new clases.conexion();                
        //int idx=(int) combo1.getSelectedItem();
        
        //String sql1="Select CoordenadaXOrigen From catordenesservicios Where "+seleccion+" = \""+combo2.getSelectedItem()+"\"";
//        String sql="Select CapacidadActual  From catunidades Where Clave="+idx;
//        String sql2="Select Kilometraje Where From catunidades Where Clave="+idx;
//        String sql3="Select EnServicio Where From catunidades Where Clave="+idx;
//        String sql4="Select Capacidad Where From catunidades Where Clave="+idx;
//         try {
//             capacidadTotal=pasar_filas(sql4);
//             cap=pasar_filas(sql);
//             km=pasar_filas(sql2);
//             servicio=pasar_filas(sql3);
//             System.out.println("capacidad actual :"+cap+" kilometros: "+km+" En servicio :"+servicio);
//         } catch (SQLException ex) {
//             Logger.getLogger(AsignacionUnidades.class.getName()).log(Level.SEVERE, null, ex);
//         }
            System.out.println("kilometraje en la tabla "+tabla.getValueAt(0,3));
            int actual=Integer.parseInt(cap);
            double kmtabla=Double.parseDouble((String) tabla.getValueAt(0,3));
            
            
            actual=actual+Integer.parseInt(volumen.getText());
           double kmactual=Double.parseDouble(km);
            kmactual=kmactual+ kmtabla;
            System.out.println("kilometraje en la tabla "+kmtabla+"kilometraje actualizado"+kmactual);
            servicio="1";
                if (Integer.parseInt(capacidadTotal)<actual && servicio=="1")
                {
                    JOptionPane.showMessageDialog(null,"Lo siento, este camion excede el volumen deseado o el camion esta en uso, seleccione otro");
                }
                else{
                        try {                    
                                
                PreparedStatement pstm =(PreparedStatement)
                con.getConnection().prepareStatement("Update catunidades Set CapacidadActual='"+actual+"',Kilometraje="+kmactual+",EnServicio="+servicio+" Where Clave ="+idx);
                pstm.executeUpdate();
                pstm.close();   
                JOptionPane.showMessageDialog(null,"Se modificaron los datos");
                int numero = (actual*100)/Integer.parseInt(capacidadTotal);
                clases.Llenar llena = new clases.Llenar(numero,progreso,camiones);
                llena.start();
                }catch (SQLException ex) {
                    Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }//GEN-LAST:event_asignarActionPerformed

    private void combo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo1ActionPerformed
//        int idx=(int) combo1.getSelectedItem();
//        String sql="Select CapacidadActual  From catunidades Where Clave = "+idx;
//        String sql2="Select Kilometraje Where From catunidades Clave = "+idx;
//        String sql3="Select EnServicio Where From catunidades Clave="+idx;
//        String sql4="Select Capacidad Where From catunidades Clave="+idx;
//        String cap = "0",km = "3000",servicio = "1",capacidadTotal;
//         try {
//             cap=pasar_filas(sql);
//             km=pasar_filas(sql2);
//             servicio=pasar_filas(sql3);
//         } catch (SQLException ex) {
//             Logger.getLogger(AsignacionUnidades.class.getName()).log(Level.SEVERE, null, ex);
//         }
        
    }//GEN-LAST:event_combo1ActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
//        int idx=(int) jComboBox2.getSelectedItem();
//        String sql="Select CapacidadActual  From catunidades Where Clave = "+idx;
//        String sql2="Select Kilometraje Where From catunidades Clave = "+idx;
//        String sql3="Select EnServicio Where From catunidades Clave="+idx;
//        String sql4="Select Capacidad Where From catunidades Clave="+idx;
//        
//        try {
//             cap=pasar_filas(sql);
//             km=pasar_filas(sql2);
//             servicio=pasar_filas(sql3);
//             
//         } catch (SQLException ex) {
//             Logger.getLogger(AsignacionUnidades.class.getName()).log(Level.SEVERE, null, ex);
//         }
//         combo1.setSelectedItem(idx);
         
    }//GEN-LAST:event_tablaMouseClicked

    /**
     * @param args the command line arguments
     */
   int volTotal;
    public void Seleccion(String Folio)
    {   
    try {
                    PreparedStatement   pstm = (PreparedStatement)
                    con.getConnection().prepareStatement("SELECT VolTotal,NombreCteOrigen,Vendedor FROM catordenesservicios WHERE FolioOrdenServicio='"+Folio+"'");
                    ResultSet res = pstm.executeQuery();
                    res.next();
                     
                          String Vol = res.getString("VolTotal");
                          String Cliente = res.getString("NombreCteOrigen");
                          String Vendedor = res.getString("Vendedor");
                          
                          volTotal = Integer.parseInt(Vol);
                          
                          volumen.setText(Vol);
                          jTextField2.setText(Cliente);
                          jTextField3.setText(Vendedor);
                    pstm.close();
                          
                    
        } catch (SQLException ex) {
             System.out.println(ex);
        }
    
   
    
    
    }
     int volunidad;
     int capa;
    public void SelecUnidad(String Clave)
    {           
     try {
                    PreparedStatement   pstm = (PreparedStatement)
                    con.getConnection().prepareStatement("SELECT Capacidad,CapacidadActual FROM catunidades WHERE clave='"+Clave+"'");
                    ResultSet res = pstm.executeQuery();
                    res.next();
                   //Reniciar en el progres
                          volunidad = Integer.parseInt(res.getString("Capacidad"));
                          capa = Integer.parseInt(res.getString("CapacidadActual"));
                    pstm.close();
                          
                    
        } catch (SQLException ex) {
             System.out.println(ex);
        }
    int numero = (capa*100)/volunidad;
   clases.Llenar llena = new clases.Llenar(numero,progreso,camiones);
   llena.start();
    
    
    }
    public void VerCombo()
    {
         try {
            this.combo1.removeAllItems();
             //System.out.println("Error 3");
           // Class.forName("com.mysql.jdbc.Driver");
           //  System.out.println("Error 4");
           // Connection conexion =DriverManager.getConnection("jdbc:mysql://localhost/mudandote", "root", "");
            Statement st = con.getConnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT FolioOrdenServicio FROM catordenesservicios");
            modeloCombo.addElement("Seleccione un folio");
            this.combo1.setModel(modeloCombo);
            while (rs.next()) {
                modeloCombo.addElement(rs.getObject("FolioOrdenServicio"));
                this.combo1.setModel(modeloCombo);
            }
 
            st.close();
        } catch (SQLException ex) {
            System.out.println("Error 1");
            System.out.println(ex);
        } 
    
    
    }
        public void VerCombo1()
    {
         try {
            this.jComboBox2.removeAllItems();
             //System.out.println("Error 3");
           // Class.forName("com.mysql.jdbc.Driver");
           //  System.out.println("Error 4");
           // Connection conexion =DriverManager.getConnection("jdbc:mysql://localhost/mudandote", "root", "");
            Statement st = con.getConnection().createStatement();
            ResultSet rs = st.executeQuery("SELECT Clave FROM catunidades");
            modeloCombo2.addElement("Seleccione un unidades");
            this.jComboBox2.setModel(modeloCombo2);
            while (rs.next()) {
                modeloCombo2.addElement(rs.getObject("Clave"));
                this.jComboBox2.setModel(modeloCombo2);
            }
 
            st.close();
        } catch (SQLException ex) {
            System.out.println("Error 1");
            System.out.println(ex);
        } 
    
    
    }
          public void Ver()
{
//con.getConnection();
        String Titulos[]={"#Folio","Nombre Cliente","Tiempo","Distacia","Estado","Municipio"};
        DefaultTableModel m = new DefaultTableModel(null,Titulos);
        tabla.setModel(m);
        int registro=0;
       
        try{
            
         PreparedStatement pstm =(PreparedStatement)
         con.getConnection().prepareStatement("SELECT count(1) as total FROM catordenesservicios ");
         ResultSet res = pstm.executeQuery();
         res.next();
         registro = res.getInt("total");
         System.out.println(registro);
         res.close();
         
        
        
        } catch (SQLException e) {
           System.out.println(e);
        }
        Object [][] datos = new String[registro][6];
        
        try {
                    PreparedStatement   pstm = (PreparedStatement)
                    con.getConnection().prepareStatement("SELECT catordenesservicios.FolioOrdenServicio,catordenesservicios.NombreCteOrigen,catordenesservicios.Tiempo,catordenesservicios.Distancia,estados.nombre,municipios.mun_nombre from catordenesservicios LEFT JOIN estados ON estados.id_estado=catordenesservicios.EstadoOrigen LEFT JOIN municipios ON municipios.id_municipio=catordenesservicios.MunicipioOrigen");
                      ResultSet res = pstm.executeQuery();
                      int i=0;
                      while(res.next()){
                          String nombreUs = res.getString("catordenesservicios.FolioOrdenServicio");
                          String PassU = res.getString("catordenesservicios.NombreCteOrigen");
                          String PlazaU = res.getString("catordenesservicios.Tiempo");
                          String SerieU = res.getString("catordenesservicios.Distancia");
                           String Municipio  = res.getString("municipios.mun_nombre");
                          String Estado = res.getString("nombre");
                          datos[i][0]=nombreUs;
                          datos[i][1]=PassU;
                          datos[i][2]=PlazaU;
                          datos[i][3]=SerieU;
                           datos[i][4]=Municipio;
                            datos[i][5]=Estado;
                          m.addRow(datos[i]);
                          i++;
                      
                      
                      }
                    
        } catch (SQLException ex) {
             System.out.println(ex);
        }
}
              public void Ver(String Folio)
{
//con.getConnection();
        String Titulos[]={"#Folio","Nombre Cliente","Tiempo","Distacia","Estado","Municipio"};
        DefaultTableModel m = new DefaultTableModel(null,Titulos);
        tabla.setModel(m);
        int registro=0;
       
        try{
            
         PreparedStatement pstm =(PreparedStatement)
         con.getConnection().prepareStatement("SELECT count(1) as total FROM catordenesservicios ");
         ResultSet res = pstm.executeQuery();
         res.next();
         registro = res.getInt("total");
         System.out.println(registro);
         res.close();
         
        
        
        } catch (SQLException e) {
           System.out.println(e);
        }
        Object [][] datos = new String[registro][6];
        
        try {
                    PreparedStatement   pstm = (PreparedStatement)
                    con.getConnection().prepareStatement("SELECT catordenesservicios.FolioOrdenServicio,catordenesservicios.NombreCteOrigen,catordenesservicios.Tiempo,catordenesservicios.Distancia,estados.nombre,municipios.mun_nombre from catordenesservicios LEFT JOIN estados ON estados.id_estado=catordenesservicios.EstadoOrigen LEFT JOIN municipios ON municipios.id_municipio=catordenesservicios.MunicipioOrigen WHERE FolioOrdenServicio='"+Folio+"'");
                      ResultSet res = pstm.executeQuery();
                      int i=0;
                      while(res.next()){
                          String nombreUs = res.getString("catordenesservicios.FolioOrdenServicio");
                          String PassU = res.getString("catordenesservicios.NombreCteOrigen");
                          String PlazaU = res.getString("catordenesservicios.Tiempo");
                          String SerieU = res.getString("catordenesservicios.Distancia");
                           String Municipio  = res.getString("municipios.mun_nombre");
                          String Estado = res.getString("nombre");
                          datos[i][0]=nombreUs;
                          datos[i][1]=PassU;
                          datos[i][2]=PlazaU;
                          datos[i][3]=SerieU;
                           datos[i][4]=Municipio;
                            datos[i][5]=Estado;
                          m.addRow(datos[i]);
                          i++;
                      
                      
                      }
                    
        } catch (SQLException ex) {
             System.out.println(ex);
        }
}
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AsignacionUnidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AsignacionUnidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AsignacionUnidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AsignacionUnidades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
          try 
    {
      UIManager.setLookAndFeel(new SyntheticaOrangeMetallicLookAndFeel());
    } 
    catch (Exception e) 
      {
      e.printStackTrace();
    }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AsignacionUnidades().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton asignar;
    private javax.swing.JLabel camiones;
    private javax.swing.JComboBox<String> combo1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JProgressBar progreso;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField volumen;
    // End of variables declaration//GEN-END:variables
}
