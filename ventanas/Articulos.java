/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import de.javasoft.plaf.synthetica.SyntheticaOrangeMetallicLookAndFeel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.lang.String;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import clases.conexion;
import java.util.HashMap;
import java.util.Map;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author danielandrademaglioni
 */
public class Articulos extends javax.swing.JFrame {
    String sql2 = "SELECT Descripcion,M3,Grupo,GrupoCosteo FROM aticulos";  
    String description;
    String family;
    float mm3;
    String services;
    String jose;
    /**
     * Creates new form Articulos
     */
    public Articulos() throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        aceptar.setVisible(false);
        cancelar.setVisible(false);
        Filtrados main = new Filtrados();
        main.pasar_valores(tabla, sql2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descripcion = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        familia = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        m3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Servicios = new javax.swing.JComboBox<>();
        agregar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        aceptar = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        ChkFamilia = new javax.swing.JCheckBox();
        ChkServicios = new javax.swing.JCheckBox();
        ChkM3 = new javax.swing.JCheckBox();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Articulos");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel1.setText("Familia:");

        jLabel2.setText("Descripcion:");

        descripcion.setColumns(20);
        descripcion.setRows(5);
        jScrollPane1.setViewportView(descripcion);
        descripcion.getAccessibleContext().setAccessibleDescription("");

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Clave", "Decripcion", "Familia", "M3", "Servicios"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabla);

        familia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CAMAS", "COLCHONES", "COMEDORES", "ELECTRONICA", "OTROS", "SALAS", "SERVICIOS EXCLUSIVOS", "VEHICULOS" }));

        jLabel3.setText("M3");

        m3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                m3KeyTyped(evt);
            }
        });

        jLabel4.setText("Servicios");

        Servicios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MENAJE", "ALMACENAJE", "VENTAS", "RENTAS", "EMPAQUE", "SERVICIOS" }));

        agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Save.png"))); // NOI18N
        agregar.setText("Guardar");
        agregar.setToolTipText("");
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });

        eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/delete.png"))); // NOI18N
        eliminar.setText("Borrar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        modificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/list.png"))); // NOI18N
        modificar.setText("Editar");
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });

        aceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/acep.png"))); // NOI18N
        aceptar.setText("Aceptar");
        aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarActionPerformed(evt);
            }
        });

        cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cancel.png"))); // NOI18N
        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Search.png"))); // NOI18N
        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Search.png"))); // NOI18N
        jButton2.setText("Buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Search.png"))); // NOI18N
        jButton3.setText("Buscar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ChkFamilia.setText("Familia");

        ChkServicios.setText("Servicios");

        ChkM3.setText("M3");

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/imp.png"))); // NOI18N
        jButton4.setText("Imprimir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(ChkFamilia)
                .addGap(31, 31, 31)
                .addComponent(ChkServicios)
                .addGap(27, 27, 27)
                .addComponent(ChkM3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChkFamilia)
                    .addComponent(ChkServicios)
                    .addComponent(ChkM3)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(familia, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Servicios, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(agregar)
                        .addGap(18, 18, 18)
                        .addComponent(modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancelar)
                        .addGap(18, 18, 18)
                        .addComponent(aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 18, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 828, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(171, 171, 171))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jLabel4)
                    .addComponent(Servicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(familia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(m3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(agregar)
                    .addComponent(modificar)
                    .addComponent(cancelar)
                    .addComponent(aceptar)
                    .addComponent(eliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
        if (tabla.getSelectedRow()==-1){
            if ("".equals(descripcion.getText()) || "".equals(m3.getText())) 
            {            
                JOptionPane.showMessageDialog(null,"Selecciona una celda de la tabla");
            }
        }
        else
        {
            clases.conexion con = new clases.conexion();
            try {

                PreparedStatement pstm =(PreparedStatement)        

                con.getConnection().prepareStatement("INSERT INTO aticulos (Descripcion,M3,Grupo,Baja,EsServicio,GrupoCosteo,GrupoComision) VALUES (?,?,?,?,?,?,?)");                                            
                pstm.setString(1,descripcion.getText());               
                pstm.setString(2,m3.getText());
                pstm.setString(3,familia.getSelectedItem().toString());
                pstm.setString(4,"0");
                pstm.setString(5,"0");                
                pstm.setString(6,Servicios.getSelectedItem().toString());
                pstm.setString(7,"0");
                pstm.execute();
                pstm.close();                        
                Filtrados main = new Filtrados();
                main.pasar_valores(tabla, sql2);
            } catch (SQLException ex) {
                Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
    }//GEN-LAST:event_agregarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        if (tabla.getSelectedRow()!=-1)
        {
            String idx = (String) tabla.getValueAt(tabla.getSelectedRow(),0);
            clases.conexion con = new clases.conexion();
            try {
                PreparedStatement pst =(PreparedStatement)            
                con.getConnection().prepareStatement("DELETE FROM aticulos WHERE Descripcion ='"+idx+"'");                    
                int variable = pst.executeUpdate();
                if (variable>0)
                {
                    System.out.println("Se elimino");
                    Filtrados main = new Filtrados();
                    main.pasar_valores(tabla, sql2);
                }
                pst.close(); 
                }catch(SQLException ex){
                    Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
                
                }
        }
        else {
            JOptionPane.showMessageDialog(null,"Para Eliminar primero debes seleccionar en la tabla que registro quieres Eliminar");
        }
    }//GEN-LAST:event_eliminarActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        if (tabla.getSelectedRow()!=-1)
        {
            tabla.setEnabled(false);
//            description = (String) tabla.getValueAt(tabla.getSelectedRow(),1);
//            family = (String) tabla.getValueAt(tabla.getSelectedRow(),2);
//            mm3 = (String) tabla.getValueAt(tabla.getSelectedRow(),3);
//            services = (String) tabla.getValueAt(tabla.getSelectedRow(),4);
            //buscar.setVisible(false);
            eliminar.setVisible(false);
            agregar.setVisible(false);
            modificar.setVisible(false);
            aceptar.setVisible(true);
            cancelar.setVisible(true);
//            descripcion.setText(description);
//            familia.setSelectedItem(family);
//            m3.setText(mm3);
//            Servicios.setSelectedItem(services);
        }
        else {
            JOptionPane.showMessageDialog(null,"Para Modificar primero debes seleccionar en la tabla que registro quieres modificar");
        }
    }//GEN-LAST:event_modificarActionPerformed

    private void aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarActionPerformed
        int idx = (int) tabla.getValueAt(tabla.getSelectedRow(),0);
        clases.conexion con = new clases.conexion();
        try {            
            PreparedStatement pstm =(PreparedStatement)                    
            con.getConnection().prepareStatement("UPDATE aticulos SET Descripcion='"+descripcion.getText()+"',M3='"+m3.getText()+"',GrupoCosteo='"+Servicios.getSelectedItem().toString()+"',Grupo='"+familia.getSelectedItem().toString()+"' WHERE Cve_articulo="+idx);                                                        
            pstm.executeUpdate();
            pstm.close();                        
            Filtrados main = new Filtrados();
            main.pasar_valores(tabla, sql2);
            JOptionPane.showMessageDialog(null,"Se modifico el registro con exito!");
            
            aceptar.setVisible(false);
            cancelar.setVisible(false);
            //buscar.setVisible(true);
            eliminar.setVisible(true);
            agregar.setVisible(true);
            modificar.setVisible(true);
            descripcion.setText("");
        familia.setSelectedIndex(0);
        m3.setText("");
        Servicios.setSelectedIndex(0);
        } catch (SQLException ex) {
            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_aceptarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        //buscar.setVisible(true);
        eliminar.setVisible(true);
        agregar.setVisible(true);
        modificar.setVisible(true);
        aceptar.setVisible(false);
        cancelar.setVisible(false);
        descripcion.setText("");
        familia.setSelectedIndex(0);
        m3.setText("");
        Servicios.setSelectedIndex(0);        
    }//GEN-LAST:event_cancelarActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        description = (String) tabla.getValueAt(tabla.getSelectedRow(),0);
        family = (String) tabla.getValueAt(tabla.getSelectedRow(),2);
        mm3 = Float.parseFloat(tabla.getValueAt(tabla.getSelectedRow(),1).toString());
        services = (String) tabla.getValueAt(tabla.getSelectedRow(),3);    
        descripcion.setText(description);    
        familia.setSelectedItem(family);
        m3.setText(""+mm3);
        Servicios.setSelectedItem(services); 
    }//GEN-LAST:event_tablaMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        descripcion.setText("");
        familia.setSelectedIndex(0);
        m3.setText("");
        Servicios.setSelectedIndex(0);  
    }//GEN-LAST:event_formMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String condi = "SELECT Descripcion,M3,Grupo,GrupoCosteo FROM aticulos where M3 ='" +m3.getText()+"'";
        
        buscar(condi);
    }//GEN-LAST:event_jButton3ActionPerformed
  public void buscar(String condi)
        {
            conexion con = new conexion();
             String Titulos[] = {"Descripcion","M3","Grupo","GrupoCosteo"};
       DefaultTableModel m = new DefaultTableModel(null, Titulos);
       tabla.setModel(m);
       int registro = 0;
       
       //obtener la cantidad de registro de una tabla
       
       try{
           PreparedStatement pstm = (PreparedStatement)
           con.getConnection().prepareStatement("SELECT count(1) as total FROM aticulos");
           ResultSet res = pstm.executeQuery();
           res.next();
           registro = res.getInt("total");
           System.out.println(registro);
           res.close();
                   
       }
       
       catch(SQLException e)
       {
           System.out.println(e);
       }
       try
       {
       Object[][] datos = new String[registro][4];
         PreparedStatement pstm = (PreparedStatement)
                 //////////////////////
                 ///////////////////////
            con.getConnection().prepareStatement(condi);
         ResultSet res = pstm.executeQuery();
         int i =0;
         
         while(res.next())
         {
           
             
             datos[i][0] = res.getString("Descripcion");
             datos[i][1] = res.getString("M3");
             datos[i][2] = res.getString("Grupo");
             datos[i][3] = res.getString("GrupoCosteo");
             m.addRow(datos[i]);
             i++;
         }
       
       }
       
       catch(SQLException e)
       {
           System.out.println(e);
          
       
       }
        }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String condi = "SELECT Descripcion,M3,Grupo,GrupoCosteo FROM aticulos where Grupo ='" +familia.getSelectedItem().toString()+"'";
        
        buscar(condi);
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String condi = "SELECT Descripcion,M3,Grupo,GrupoCosteo FROM aticulos where GrupoCosteo ='" +Servicios.getSelectedItem().toString()+"'";
        
        
        buscar(condi);
        
    }//GEN-LAST:event_jButton2ActionPerformed
    
    
    public void ReportesServicios(String Reporte,String condi)
    {
         conexion con = new conexion();
        
        Map parametros = new HashMap();
        String REPORTE = System.getProperty("user.dir") + "\\src\\reportes\\";
        
                parametros.put("Cod1", condi);
                //parametros.put("cod2", dato2);
                REPORTE += Reporte;
        System.err.println(REPORTE);
        JasperReport reporteJasper = null;
        try {
            reporteJasper = JasperCompileManager.compileReport(REPORTE);
        } catch (JRException ex) {
            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
        }
        JasperPrint informe = null;
        try {
                informe = JasperFillManager.fillReport(reporteJasper, parametros, con.getConnection());
        } catch (JRException ex) {
            Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
        }
        JasperViewer.viewReport(informe, false);
    }
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        if(ChkFamilia.isSelected()==false&&ChkM3.isSelected()==false&&ChkServicios.isSelected() == false)
        {
            JOptionPane.showMessageDialog(null, "Favor de seleccionar el reporte a imprimir");
        }
        else
        {
             if(this.ChkFamilia.isSelected()==true)
        {
            ReportesServicios("ReporteFamilia.jrxml",familia.getSelectedItem().toString());
        }
        if(this.ChkM3.isSelected()==true)
        {
            if(m3.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Favor de ingresar los metros cubicos");
            }
            else
            {
                ReportesServicios("ArticulosM3.jrxml",m3.getText());
            }
            
        }
        if(this.ChkServicios.isSelected() == true)
        {
               ReportesServicios("Articulos.jrxml",Servicios.getSelectedItem().toString());
        }
        }
        
       
    
       
       
       
    }//GEN-LAST:event_jButton4ActionPerformed

    private void m3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_m3KeyTyped
        char c = evt.getKeyChar();
        if(!Character.isDigit(c))
        {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_m3KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Articulos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>        
        /* Create and display the form */
          try 
    {
      UIManager.setLookAndFeel(new SyntheticaOrangeMetallicLookAndFeel());
    } 
    catch (Exception e) 
      {
      e.printStackTrace();
    }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Articulos().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Articulos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ChkFamilia;
    private javax.swing.JCheckBox ChkM3;
    private javax.swing.JCheckBox ChkServicios;
    private javax.swing.JComboBox<String> Servicios;
    private javax.swing.JButton aceptar;
    private javax.swing.JButton agregar;
    private javax.swing.JButton cancelar;
    private javax.swing.JTextArea descripcion;
    private javax.swing.JButton eliminar;
    private javax.swing.JComboBox<String> familia;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField m3;
    private javax.swing.JButton modificar;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
